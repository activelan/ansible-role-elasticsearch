#{{ ansible_managed }}

################################### Cluster ###################################

# Cluster name identifies your cluster for auto-discovery. If you're running
# multiple clusters on the same network, make sure you're using unique names.
#
cluster.name: {{ elasticsearch_cluster_name }}


#################################### Node #####################################

# Node names are generated dynamically on startup, so you're relieved
# from configuring them manually. You can tie this node to a specific name:
#
node.name   : {{ elasticsearch_node_name    | default(ansible_hostname) }}
node.master : {{ elasticsearch_node_master  | default(true) | lower     }}
node.data   : {{ elasticsearch_node_data    | default(true) | lower     }}

{% for key, val in elasticsearch_custom_var.iteritems() %}
node.{{ key }} : {{ val }}
{% endfor %}

node.max_local_storage_nodes : {{ elasticsearch_node_max_local_storage_nodes }}


#################################### Index ####################################

# Set the number of shards (splits) of an index (5 by default):
#
index.number_of_shards : {{ elasticsearch_index_number_of_shards }}

# Set the number of replicas (additional copies) of an index (1 by default):
#
index.number_of_shards : {{ elasticsearch_index_number_of_replicas }}


#################################### Paths ####################################

# Path to directory containing configuration (this file and logging.yml):
#
path.conf : {{ elasticsearch_path_conf }}

# Path to directory where to store index data allocated for this node.
#
path.data : {{ elasticsearch_path_data | join(',') }}

# Path to temporary files:
#
path.work : {{ elasticsearch_path_work }}

# Path to log files:
#
path.logs : {{ elasticsearch_path_logs }}

# Path to where plugins are installed:
#
path.plugins : {{ elasticsearch_path_plugins }}


#################################### Plugin ###################################

# If a plugin listed here is not installed for current node, the node will not start.
#
plugin.mandatory: {{ elasticsearch_plugin_mandatory | join(',') }}


################################### Memory ####################################

# Elasticsearch performs poorly when JVM starts swapping: you should ensure that
# it _never_ swaps.
#
# Set this property to true to lock the memory:
#
bootstrap.mlockall: {{ elasticsearch_bootstrap_mlockall | lower }}

# Make sure that the ES_MIN_MEM and ES_MAX_MEM environment variables are set
# to the same value, and that the machine has enough memory to allocate
# for Elasticsearch, leaving enough memory for the operating system itself.
#
# You should also make sure that the Elasticsearch process is allowed to lock
# the memory, eg. by using `ulimit -l unlimited`.


############################## Network And HTTP ###############################

# Elasticsearch, by default, binds itself to the 0.0.0.0 address, and listens
# on port [9200-9300] for HTTP traffic and on port [9300-9400] for node-to-node
# communication. (the range means that if the port is busy, it will automatically
# try the next port).

# Set the bind address specifically (IPv4 or IPv6):
#
network.bind_host: {{ elasticsearch_network_bind_host }}

# Set the address other nodes will use to communicate with this node. If not
# set, it is automatically derived. It must point to an actual IP address.
#
network.publish_host: {{ elasticsearch_network_publish_host }}

# Set both 'bind_host' and 'publish_host':
#
network.host: {{ elasticsearch_network_host }}

# Set a custom port for the node to node communication (9300 by default):
#
transport.tcp.port: {{ elasticsearch_transport_tcp_port }}

# Enable compression for all communication between nodes (disabled by default):
#
transport.tcp.compress: {{ elasticsearch_transport_tcp_compress | lower }}

# Set a custom port to listen for HTTP traffic:
#
http.port: {{ elasticsearch_http_port }}

# Set a custom allowed content length:
#
http.max_content_length: {{ elasticsearch_http_max_content_length }}

# Disable HTTP completely:
#
http.enabled: {{ elasticsearch_http_enabled | lower }}


################################### Gateway ###################################

# The gateway allows for persisting the cluster state between full cluster
# restarts. Every change to the state (such as adding an index) will be stored
# in the gateway, and when the cluster starts up for the first time,
# it will read its state from the gateway.

# There are several types of gateway implementations. For more information, see
# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/modules-gateway.html>.

# The default gateway type is the "local" gateway (recommended):
#
gateway.type: {{ elasticsearch_gateway_type }}

# Settings below control how and when to start the initial recovery process on
# a full cluster restart (to reuse as much local data as possible when using shared
# gateway).

# Allow recovery process after N nodes in a cluster are up:
#
gateway.recover_after_nodes: {{ elasticsearch_gateway_recover_after_nodes }}

# Set the timeout to initiate the recovery process, once the N nodes
# from previous setting are up (accepts time value):
#
gateway.recover_after_time: {{ elasticsearch_gateway_recover_after_time }}

# Set how many nodes are expected in this cluster. Once these N nodes
# are up (and recover_after_nodes is met), begin recovery process immediately
# (without waiting for recover_after_time to expire):
#
gateway.expected_nodes: {{ elasticsearch_gateway_expected_nodes }}


############################# Recovery Throttling #############################

# These settings allow to control the process of shards allocation between
# nodes during initial recovery, replica allocation, rebalancing,
# or when adding and removing nodes.

# Set the number of concurrent recoveries happening on a node:
#
# 1. During the initial recovery
#
cluster.routing.allocation.node_initial_primaries_recoveries: {{ elasticsearch_cluster_routing_allocation_node_initial_primaries_recoveries }}
#
# 2. During adding/removing nodes, rebalancing, etc
#
cluster.routing.allocation.node_concurrent_recoveries: {{ elasticsearch_cluster_routing_allocation_node_concurrent_recoveries }}

# Set to throttle throughput when recovering (eg. 100mb, by default 20mb):
#
indices.recovery.max_bytes_per_sec: {{ elasticsearch_indices_recovery_max_bytes_per_sec }}

# Set to limit the number of open concurrent streams when
# recovering a shard from a peer:
#
indices.recovery.concurrent_streams: {{ elasticsearch_indices_recovery_concurrent_streams }}


################################## Discovery ##################################

# Discovery infrastructure ensures nodes can be found within a cluster
# and master node is elected. Multicast discovery is the default.

# Set to ensure a node sees N other master eligible nodes to be considered
# operational within the cluster. This should be set to a quorum/majority of
# the master-eligible nodes in the cluster.
#
discovery.zen.minimum_master_nodes: {{ elasticsearch_discovery_zen_minimum_master_nodes }}

# Set the time to wait for ping responses from other nodes when discovering.
# Set this option to a higher value on a slow or congested network
# to minimize discovery failures:
#
discovery.zen.ping.timeout: {{ elasticsearch_discovery_zen_ping_timeout }}

# For more information, see
# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/modules-discovery-zen.html>

# Unicast discovery allows to explicitly control which nodes will be used
# to discover the cluster. It can be used when multicast is not present,
# or to restrict the cluster communication-wise.
#
# 1. Disable multicast discovery (enabled by default):
#
discovery.zen.ping.multicast.enabled: {{ elasticsearch_discovery_zen_ping_multicast_enabled | lower }}
#
# 2. Configure an initial list of master nodes in the cluster
#    to perform discovery when new nodes (master or data) are started:
#
discovery.zen.ping.unicast.hosts: [ {{ elasticsearch_discovery_zen_ping_unicast_hosts | join(',') }} ]


################################## Slow Log ##################################

# Shard level query and fetch threshold logging.

index.search.slowlog.threshold.query.warn    : {{ elasticsearch_index_search_slowlog_threshold_query_warn  }}
index.search.slowlog.threshold.query.info    : {{ elasticsearch_index_search_slowlog_threshold_query_info  }}
index.search.slowlog.threshold.query.debug   : {{ elasticsearch_index_search_slowlog_threshold_query_debug }}
index.search.slowlog.threshold.query.trace   : {{ elasticsearch_index_search_slowlog_threshold_query_trace }}

index.search.slowlog.threshold.fetch.warn    : {{ elasticsearch_index_search_slowlog_threshold_fetch_warn  }}
index.search.slowlog.threshold.fetch.info    : {{ elasticsearch_index_search_slowlog_threshold_fetch_info  }}
index.search.slowlog.threshold.fetch.debug   : {{ elasticsearch_index_search_slowlog_threshold_fetch_debug }}
index.search.slowlog.threshold.fetch.trace   : {{ elasticsearch_index_search_slowlog_threshold_fetch_trace }}

index.indexing.slowlog.threshold.index.warn  : {{ elasticsearch_index_indexing_slowlog_threshold_index_warn  }}
index.indexing.slowlog.threshold.index.info  : {{ elasticsearch_index_indexing_slowlog_threshold_index_info  }}
index.indexing.slowlog.threshold.index.debug : {{ elasticsearch_index_indexing_slowlog_threshold_index_debug }}
index.indexing.slowlog.threshold.index.trace : {{ elasticsearch_index_indexing_slowlog_threshold_index_trace }}


################################## GC Logging ################################

monitor.jvm.gc.young.warn  : {{ elasticsearch_monitor_jvm_gc_young_warn  }}
monitor.jvm.gc.young.info  : {{ elasticsearch_monitor_jvm_gc_young_info  }}
monitor.jvm.gc.young.debug : {{ elasticsearch_monitor_jvm_gc_young_debug }}

monitor.jvm.gc.old.warn  : {{ elasticsearch_monitor_jvm_gc_old_warn  }}
monitor.jvm.gc.old.info  : {{ elasticsearch_monitor_jvm_gc_old_info  }}
monitor.jvm.gc.old.debug : {{ elasticsearch_monitor_jvm_gc_old_debug }}


################################## Security ################################

# Uncomment if you want to enable JSONP as a valid return transport on the
# http server. With this enabled, it may pose a security risk, so disabling
# it unless you need it is recommended (it is disabled by default).
#
http.jsonp.enable: {{ elasticsearch_http_jsonp_enable | lower }}
